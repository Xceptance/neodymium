# Enable uploading test results and reports to XTC
xtc.api.enable = false

# Organization and project to identify the project in XTC
xtc.api.organization = xc
xtc.api.project = neo-example

# Secrets for the XTC API access
# ATTENTION: should NOT be defined here, instead move it to dev-xtc-api.properties or dev-credentials.properties
xtc.api.key =
xtc.api.secret =

# The scope of the API key in XTC
xtc.api.scope = TESTEXECUTION_CREATE TESTEXECUTION_FINISH TESTEXECUTION_LIST TESTEXECUTION_REPORT_UPLOAD TESTEXECUTION_UPDATE

# Name and profile for the test run - to identify the test run easier
xtc.api.name = ${xtc.api.project} local test run ${xtc.api.buildNumber}
xtc.api.profile = local test run

# Pipeline link, build number and test instance to add CICD metadata
xtc.api.pipelineLink = https://example.com/pipeline/${xtc.api.buildNumber}
xtc.api.buildNumber = 42
xtc.api.testInstance = local-test-instance

# Description for the test run
xtc.api.description = test run for local development

# The estimated duration in minutes - gives XTC an estimated duration
xtc.api.estimatedDuration = 1

# Controls the REST client
# number of retires for each REST call
xtc.api.numberOfRetries = 3
# initial delay between retries in milliseconds
xtc.api.retryDelay = 1000
# timeout for the REST client to create the run, update the results and upload the report
xtc.api.timeout = 30000

# Controls the error handling for REST calls
# throw an exception when the run could not be created
xtc.api.throwExceptionForRunCreationError = true
# throw an exception when the run could not be updated
xtc.api.throwExceptionForRunUpdateError = true
# throw an exception when the report could not be uploaded
xtc.api.throwExceptionForReportUploadError = true

# Defines the result directories
# define the suredire result directory - used to get the test statistics
xtc.api.surefireResultDirectory = target/surefire-reports
# define the allure result directory - currently not used but maybe later to enable the report history
xtc.api.allureResultDirectory = target/allure-results
# define the allure report directory - containing the generated allure report used to upload it
xtc.api.allureReportDirectory = target/site/allure-maven-plugin

# throws an exception if something is not configured correctly
xtc.api.validateConfigurationWithException = false

# if true, throws an exception if the XTC API is disabled - prevent accidentally turning it off
xtc.api.throwExceptionForRunInitialization = false
