# This file contains properties that will be read by Neodymium to alter properties of test execution
# All duration and timeout values are expected to be expressed in milliseconds

# These are default values for available properties. In order to change a value uncomment the line and change its value. 

#############################
#
# Site properties
#
#############################
#
# The URL of the web site to test
# neodymium.url = ${neodymium.url.protocol}://${neodymium.url.host}${neodymium.url.path}
#
# The protocol used to access the site
# neodymium.url.protocol = 
#
# The host encoded in the URL
# neodymium.url.host =
#
# The path on the site that is used as test entry point
# neodymium.url.path = /
#
# The site/channel part of the url
# neodymium.url.site = 
#
#########
#
# Localization
#
#########
#
# The locale that should be used to lookup translations in localization feature
# neodymium.locale = en_US
#
# Path to the yaml formatted file that contains localized (translated) data for the site
# neodymium.localization.file = config/localization.yaml
#
#############################
#
# Basic authentication properties
#
#############################
#
# Username that should be used for basic authentication
# neodymium.basicauth.username =
#
# Password that should be used for basic authentication
# neodymium.basicauth.password =
#
#############################
#
# Selenide properties
#
#############################
#
# These properties are used to configure Selenide (This is a global setting and has effect on every element selection)
#
# How long should Selenide wait to match a condition
# neodymium.selenide.timeout = 3000
#
# The values of input field will be set via JavaScript
# neodymium.selenide.fastSetValue = false
#
# The clicks will be executed via JavaScript 
# neodymium.selenide.clickViaJs = false
#
#############################
#
# Debugging properties
#
#############################
#
# Should elements highlighted that are selected by Selenide 
# neodymium.debugUtils.highlight = false
#
# How long should an element be highlighted
# neodymium.debugUtils.highlight.duration = 100
#
# How to display test execution in Eclipse JUnit view. tree - a hierarchical representation, flat - a flat list of tests
# neodymium.junit.viewmode = tree
#
#############################
#
# Neodymium context properties
#
#############################
# The following setting reassemble responsive design breakpoints. They determine at which page width a site is considered to be displayed on a small, medium, large or extra large device.
# You can use the by calling e.g. Neodymium.isSmallDesktop()
# 
# neodymium.context.device.breakpoint.small = 576
# neodymium.context.device.breakpoint.medium = 768
# neodymium.context.device.breakpoint.large = 992
# neodymium.context.device.breakpoint.xlarge = 1200
#
# The following long value will be use to initialize Neodymiums Random instance.  
# neodymium.context.random.initialValue = 123456789
#
# Using this option you can filter the test to be executed by class name, method name and data set id
# neodymium.testNameFilter = 
#
#############################
#
# JavaScriptUtils properties
#
#############################
# The following properties are taken into account if you use functions form the JavaScriptUtils class.
#
# neodymium.javaScriptUtils.timeout = 2000
# neodymium.javaScriptUtils.pollingInterval = 200
# neodymium.javaScriptUtils.loading.jQueryIsRequired = true
# neodymium.javaScriptUtils.loading.animationSelector = [String]
#
#############################
#
# SelenideAddons properties
#
#############################
# The following properties are taken into account if you use functions form the SelenideUtils class.
#
# How often should the $safe function try to match a condition if the element is affected by staleness
# neodymium.selenideAddons.staleElement.retry.count = 3
#
# How long should the $safe function wait between retries in case of element staleness
# neodymium.selenideAddons.staleElement.retry.timeout = 500
# 
# How long should the optionalWait(While|Until)Condition functions wait until it retries the condition
# neodymium.selenideAddons.optional.retry.pollingIntervall= 3000
#
# After which times should the optionalWait(While|Until)Condition functions stop retrying
# neodymium.selenideAddons.optional.retry.timeout = 30000

#############################
#
# AllureAddons properties
#
#############################
# The following properties are taken into account if you use functions form the AllureAddons class.
#
# Whether or not a screenshot should be taken per step
# neodymium.allureAddons.screenshots.perstep.always = false
#
#############################
#
# DataUtils properties
#
#############################
# The following properties are taken into account if you use functions form the DataUtils class.
#
#########
#
# E-Mail generator properties
#
#########
#
# The domain used for the generated email address
# neodymium.dataUtils.email.domain = example.com
#
# The prefix used in email address generation prefix<generated>@domain
# neodymium.dataUtils.email.local.prefix = test
#
# The amount of random chars of the email [a-z0-9]
# neodymium.dataUtils.email.randomCharsAmount = 12
#
#########
# 
# Password generator properties
#
#########
#
# The amount of capital letters
# neodymium.dataUtils.password.uppercaseCharAmount = 2
#
# The amount of small letters
# neodymium.dataUtils.password.lowercaseCharAmount = 5
#
# The amount of digits
# neodymium.dataUtils.password.digitAmount = 2
#
# The amount of special characters
# neodymium.dataUtils.password.specialCharAmount = 2
#
# The special characters that should be used
# neodymium.dataUtils.password.specialChars = +-#$%%&.;,_
#
## The path to the driver server executable, if the respective driver requires
## one. If you do not specify a path, the driver server must be in your PATH.
#neodymium.webDriver.chrome.pathToDriverServer =  /path/to/chromedriver
#neodymium.webDriver.edge.pathToDriverServer = c:/path/to/MicrosoftWebDriver.exe
#neodymium.webDriver.firefox.pathToDriverServer = /path/to/geckodriver
#neodymium.webDriver.ie.pathToDriverServer = c:/path/to/IEDriverServer.exe
#neodymium.webDriver.opera.pathToDriverServer = /path/to/operadriver
#neodymium.webDriver.phantomjs.pathToDriverServer = /path/to/phantomjs

## The path to the browser executable to use. Specify the path in case you
## don't want to use the default browser executable, but an alternative version.
#neodymium.webDriver.chrome.pathToBrowser = /path/to/google-chrome
#neodymium.webDriver.firefox.pathToBrowser = /path/to/firefox
#neodymium.webDriver.opera.pathToBrowser = /path/to/opera

## Whether to run Firefox webdrivers in "legacy" mode
## which means that an add-on is used to drive the browser instead of GeckoDriver.
## Note: The legacy mode does not work with Firefox 48+. Use Firefox 45 ESR
neodymium.webDriver.firefox.legacyMode = false

## The desired dimension of the browser window. If not specified, the driver's
## defaults will be used.
#neodymium.webDriver.window.width = 1200
#neodymium.webDriver.window.height = 900

## Whether to use a single driver instance for all tests (defaults to false).
neodymium.webDriver.reuseDriver = false

## The number of reuses. If not specified or set below 1 the driver will be reused unlimited times.
## Setting the property to 1 means that the driver is reused once, so the web driver is used twice in total.
#neodymium.webDriver.maxReuse = 0

## Whether to keep browser open after test has finished
#  Warning: The webdriver process might stay alive even if you close the browser afterwards
neodymium.webDriver.keepBrowserOpen = false

## Whether to keep the browser instance open only if the test fails
#  Warning: The webdriver process might stay alive even if you close the browser afterwards 
neodymium.webDriver.keepBrowserOpenOnFailure = false

#############################
#
# Proxy configuration properties
#
#############################
# HTTP proxy settings. Specify host and port of the proxy server and whether it should be used at all.
# If the proxy requires user authentication, make sure to provide the credentials needed.
# You may also configure a comma separated list of hosts that can be used directly, thus bypassing the proxy. 
# Note that the host definitions are interpreted as regular expressions so ensure proper use of escape characters.
#
# Decide whether or not a proxy is used
# neodymium.proxy = false
#
# The host of the proxy 
# neodymium.proxy.host = 127.0.0.1
#
# The host of the proxy 
# neodymium.proxy.port = 8888
#
# The host of the proxy 
# neodymium.proxy.bypassForHosts = localhost,127\\.0\\.0\\.1,^192[.]168
#
# The socket username of the proxy 
# neodymium.proxy.socket.userName =
#
# The socket password of the proxy 
# neodymium.proxy.socket.password = 
#
# The socket version of the proxy 
# neodymium.proxy.socket.version = 

#############################
#
# Local proxy configuration properties
#
#############################

# Create a local proxy to use it for basic authentication, header manipulations or similar things
# neodymium.localproxy = false

# The following settings are required if a (self signed) certificate is used to authenticate the man in the middle(MITM) proxy
# The following property decides if such a certificate is used 
# neodymium.localproxy.certificate = false

# The following setting decides if a certificate should be created on the fly
# neodymium.localproxy.certificate.generate = true

# The path to the certificate archive file that contains the root certificate for the MITM proxy
#neodymium.localproxy.certificate.archiveFile = ./config/Certificates.p12

# The type of the certificate archive
# neodymium.localproxy.certificate.archivetype = PKCS12

# The name of the root certificate for the MITM proxy
# neodymium.localproxy.certificate.name = MITMCertificateName

# The password of the root certificate for the MITM proxy
# neodymium.localproxy.certificate.password = MITMCertificatePassword
